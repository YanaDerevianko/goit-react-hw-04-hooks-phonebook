{"version":3,"sources":["components/ContactsForm/ContactsForm.styled.jsx","components/ContactsForm/ContactsForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/App/App.styled.jsx","components/App/App.jsx","index.js"],"names":["AddForm","styled","form","ContactsInput","input","ContactsButton","button","ContactsForm","onSubmit","useState","name","setName","number","setNumber","handleChange","event","target","value","nameInputId","shortid","generate","numberInputId","preventDefault","id","type","onChange","pattern","title","required","ContactsList","ul","ListItem","li","ButtonDelete","ContactList","contacts","onDeleteContact","map","onClick","FilterContact","Filter","Container","div","App","setContacts","filter","setFilter","useEffect","localStorage","getItem","parsedContacts","JSON","parse","parsedContactsInArray","Array","from","setItem","stringify","visibleContacts","normalizedFilter","toLowerCase","length","contact","includes","getVisibleContacts","find","el","alert","prevState","e","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b5efb83d.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\nexport const AddForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\nexport const ContactsInput = styled.input`\r\n  margin-bottom: 15px;\r\n`;\r\nexport const ContactsButton = styled.button`\r\n  background-color: #2e8b57;\r\n  padding: 8px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  color: #ffffff;\r\n  font-size: 16px;\r\n`;\r\n","import { useState } from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport shortid from \"shortid\";\r\nimport { AddForm, ContactsInput, ContactsButton } from \"./ContactsForm.styled\";\r\n\r\nexport function ContactsForm({onSubmit}) {\r\n  \r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    switch (name) {\r\n      case \"name\":\r\n        return setName(value);\r\n\r\n      case \"number\":\r\n        return setNumber(value);\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const nameInputId = shortid.generate();\r\n  const numberInputId = shortid.generate();\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    onSubmit({name, number});\r\n    setName(event.target.value='');\r\n    setNumber(event.target.value='');\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Phonebook</h1>\r\n      <AddForm onSubmit={handleSubmit}>\r\n        <label>\r\n          Name:\r\n          <ContactsInput\r\n            id={nameInputId}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={handleChange}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Number:\r\n          <ContactsInput\r\n            id={numberInputId}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={handleChange}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <ContactsButton type=\"submit\">Add contact</ContactsButton>\r\n      </AddForm>\r\n    </>\r\n  );\r\n}\r\n\r\nContactsForm.propTypes = {\r\n  onSubmit: propTypes.func.isRequired,\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const ContactsList = styled.ul`\r\n  list-style: none;\r\n  width: 350px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  margin: 0 auto;\r\n`;\r\nexport const ListItem = styled.li`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 350px;\r\n  border: 2px solid #2e8b57;\r\n  border-radius: 15px;\r\n  padding: 10px;\r\n  background-color: #9acd32;\r\n  margin-bottom: 10px;\r\n`;\r\nexport const ButtonDelete = styled.button`\r\n  background-color: #2e8b57;\r\n  padding: 8px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  color: #ffffff;\r\n  font-size: 16px;\r\n`;\r\n","import propTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { ContactsList, ListItem, ButtonDelete } from \"./ContactList.styled\";\r\n\r\nexport const ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ContactsList>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ListItem key={id}>\r\n          <span>{name}</span>\r\n          <span>{number}</span>\r\n          <ButtonDelete type=\"button\" onClick={() => onDeleteContact(id)}>\r\n            Delete\r\n          </ButtonDelete>\r\n        </ListItem>\r\n      ))}\r\n    </ContactsList>\r\n  );\r\n};\r\nContactList.propTypes = {\r\n  contacts: propTypes.array.isRequired,\r\n  onDeleteContact: propTypes.func.isRequired,\r\n};\r\n","import styled from \"@emotion/styled\";\r\nexport const FilterContact = styled.input`\r\n  margin-bottom: 15px;\r\n`;\r\n","import propTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { FilterContact } from \"./Filter.styled\";\r\nexport const Filter = ({ onChange }) => {\r\n  return (\r\n    <>\r\n      <p>Find contacts by name: </p>\r\n      <FilterContact type=\"text\" name=\"filter\" onChange={onChange} />\r\n    </>\r\n  );\r\n};\r\nFilter.propTypes = {\r\n  onChange: propTypes.func.isRequired,\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.div`\r\n  height: auto;\r\n  width: 650px;\r\n  margin: 0 auto;\r\n  text-align: center;\r\n  padding: 50px;\r\n  border: 2px solid #008000;\r\n  border-radius: 5px;\r\n  background-color: #00ff7f;\r\n`;\r\n","import { useState, useEffect } from \"react\";\nimport { ContactsForm } from \"../ContactsForm/ContactsForm\";\nimport { ContactList } from \"../ContactList/ContactList\";\nimport { Filter } from \"../Filter/Filter\";\nimport { Container } from \"./App.styled\";\nimport shortid from \"shortid\";\n\nexport function App() {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contacts);\n    const parsedContactsInArray = Array.from(parsedContacts)\n    if (parsedContacts) {\n      setContacts( parsedContactsInArray );\n \n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const onSubmit = ({ name, number }) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    const foundEl = contacts.find(\n      (el) => el.name.toLowerCase() === name.toLowerCase()\n    );\n    if(foundEl){\n      alert(`${name} is already in your contacts!`)\n      return\n    }\n    setContacts((prevState) => [contact, ...prevState]);\n  };\n\n  const deleteContact = (contactId) => {\n    setContacts(prevState =>  prevState.filter((contact) => contact.id !== contactId));\n  };\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    if (contacts.length) {\n      return contacts.filter((contact) => contact.name.toLowerCase().includes(normalizedFilter)\n      );\n    }\n  };\n  const changeFilter = (e) => {\n    setFilter(e.target.value);\n  };\n\n  const visibleContacts = getVisibleContacts();\n\n  return (\n    <Container>\n      <ContactsForm onSubmit={onSubmit} />\n      <h2>Contacts</h2>\n      {contacts.length > 1 && <Filter onChange={changeFilter} />}\n      {contacts.length ? (\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContact={deleteContact}\n        />\n      ) : (\n        <p>There are no contacts here</p>\n      )}\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './components/App/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}